@model StockViewModel

<table class="table table-hover container">
	<thead>
	<tr>
		<th>#</th>
		<th>Name</th>
		<th>Category</th>
		<th>Description</th>
		<th>Price</th>
		<th>Sale</th>
		<th>In Stock</th>
	</tr>
	</thead>
	<tbody>
	@foreach (var candy in Model.CandyList)
	{
		<tr class="@(!(candy.Stock > 0) ? "table-secondary" : "")">
			<th>@candy.CandyID</th>
			<td>@candy.Name</td>
			<td>@candy.Category?.Name</td>
			<td>@candy.Description</td>
			@if (!candy.Sales.Any())
			{
				<td>@candy.Price.ToString("c")</td>
			}
			else
			{
				<td class="text-success">@((candy.Price - candy.Price * candy.Sales.Max(s => s.Discount)).ToString("c"))</td>
			}
			<td>@(candy.Sales.Any() ? $"{(int)(candy.Sales.Max(s => s.Discount) * 100)}%" : "")</td>
			<td>@candy.Stock</td>
		</tr>
	}
	</tbody>
	<tfoot>
	<partial name="Create" model="@(new CreateCandyViewModel(new Candy(), Model.Categories))"/>
	</tfoot>
</table>